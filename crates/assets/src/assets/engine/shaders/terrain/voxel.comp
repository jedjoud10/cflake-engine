#version 460 core
layout (local_size_x = 4, local_size_y = 4, local_size_z = 4) in;
layout(set=0, binding=0, r32f) writeonly uniform image3D densities;

layout(push_constant) uniform PushConstants {
    float time;
} test;

#include <engine/shaders/noises/noise3D.glsl>

float density(vec3 position) {
    //return position.z + 32.0;
    return length(position - 16) - 10;
    //return snoise(position * 0.02 + vec3(test.time, 0, 0)*0.01)*40.0 + position.y - 20;
    //return snoise(position * 0.02)*40.0;
}

void main() {
    float density = density(vec3(gl_GlobalInvocationID.xyz));
    imageStore(densities, ivec3(gl_GlobalInvocationID.xyz), vec4(density));
}
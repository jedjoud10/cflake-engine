#version 460 core
layout (local_size_x = 4, local_size_y = 4, local_size_z = 4) in;

layout(set = 0, binding = 0, rg32f) writeonly uniform image3D voxels;

#include <engine/shaders/terrain/voxel.glsl>

// Terrain voxel generation push constants
layout(push_constant) uniform PushConstants {
    vec4 offset;
    float scale;
    float quality;
} parameters;

void main() {
    // Calculate the voxel at that specific point
    vec3 position = vec3(gl_GlobalInvocationID.xyz) * parameters.scale;
    position += parameters.offset.xyz;

    vec3 color = vec3(0);
    vec3 mask = vec3(0);
    uint material = 0;

    float density = voxel(position, material);
    //density = clamp(density, -1, 1);

    float packed = uintBitsToFloat(packUnorm4x8(vec4(material)));
    vec4 data = vec4(density, packed, 0, 0);

    // Writes the data to the voxels texture
    imageStore(voxels, ivec3(gl_GlobalInvocationID.xyz), data);
}
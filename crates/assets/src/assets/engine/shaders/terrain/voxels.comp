#version 460 core
layout (local_size_x = 4, local_size_y = 4, local_size_z = 4) in;

// 2 byte contain the density (half precision)
// 2 byte containing derivatives (used for normals)
// 1 byte containing material maybe?
layout(set=0, binding=0, rg32f) writeonly uniform image3D voxels;

#include <engine/shaders/terrain/voxel.glsl>

// Terrain voxel generation push constants
layout(push_constant) uniform PushConstants {
    vec4 offset;
    float scale;
} parameters;

void main() {
    // Calculate the voxel at that specific point
    vec3 position = vec3(gl_GlobalInvocationID.xyz) * parameters.scale;
    position += parameters.offset.xyz;
    float density = voxel(position);
    vec4 data = vec4(density, 0, 0, 0);

    // Writes the data to the voxels texture
    imageStore(voxels, ivec3(gl_GlobalInvocationID.xyz), data);
}
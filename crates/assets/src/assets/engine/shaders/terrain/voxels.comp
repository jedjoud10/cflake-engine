#version 460 core
#pragma optionNV(fastmath on)
#pragma optionNV(fastprecision on)
#pragma optionNV(ifcvt all)
//#pragma optionNV(inline all)
#pragma optionNV(strict on)
#pragma optionNV(unroll all)
layout (local_size_x = 8, local_size_y = 8, local_size_z = 8) in;

layout(set = 0, binding = 0, rg32f) writeonly uniform image3D voxels;

#include <engine/shaders/terrain/voxel.glsl>

// Terrain voxel generation push constants
layout(push_constant) uniform PushConstants {
    vec4 offset;
    float scale;
    float quality;
} parameters;

void main() {
    // Calculate the voxel at that specific point
    vec3 position = vec3(gl_GlobalInvocationID.xyz) * parameters.scale;
    position += parameters.offset.xyz;

    // Input params that we will mutate
    vec3 color = vec3(0);
    uint material = 0;

    // Execute the voxel function and return a density
    float density = voxel(position, color, material);

    // Pack color, density, and material
    vec4 packed_color_and_material = vec4(color, float(material) / 255.0);
    float float_packed_color_and_material = uintBitsToFloat(packUnorm4x8(packed_color_and_material));
    vec4 data = vec4(density, float_packed_color_and_material, 0, 0);

    // Writes the data to the voxels texture
    imageStore(voxels, ivec3(gl_GlobalInvocationID.xyz), data);
}
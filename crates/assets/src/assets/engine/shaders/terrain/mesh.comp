#version 460 core
layout (local_size_x = 4, local_size_y = 4, local_size_z = 4) in;

// Data generated by the voxel comupute shader
layout(set = 0, binding = 0, r32f) readonly uniform image3D densities;

// Texture that contains the index of each vertex
layout(set = 0, binding = 1, r32ui) uniform uimage3D cached_indices;

// Output vertices
layout(std430, set = 0, binding = 2) writeonly buffer Vertices {
    vec3 data[32*32*32];
} vertices;

// Output triangles
layout(std430, set = 0, binding = 3) writeonly buffer Triangles {
    uint data[31*31*31*4];
} triangles;

// Atomic counters
layout(std430, set = 0, binding = 4) buffer Counters {
    uint counter;
};

void main() {
    atomicAdd(counter, 1);
    //vertices.data[index] = vec3(gl_GlobalInvocationID.xyz);
}